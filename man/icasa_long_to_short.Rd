% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_transform_template.R
\name{icasa_long_to_short}
\alias{icasa_long_to_short}
\title{Map Long Column Names to ICASA Short Codes for a Template Section}
\usage{
icasa_long_to_short(df, section, dict, keep_unmapped = TRUE)
}
\arguments{
\item{df}{A data frame with columns to be renamed.}

\item{section}{Character. The name of the template section (sheet) to use for mapping.}

\item{dict}{A data frame containing the mapping dictionary, with columns \code{Sheet}, \code{var_name}, and \code{Code_Query}.}

\item{keep_unmapped}{Logical. If \code{FALSE}, only columns with a mapped ICASA code are retained. If \code{TRUE} (default), unmapped columns are kept with their original names.}
}
\value{
A data frame with columns renamed to ICASA short codes, and optionally filtered to only mapped columns.
}
\description{
Renames columns in a data frame from long descriptive names to ICASA short codes, using a dictionary for a specific template section.
}
\details{
The function generates a mapping vector from the dictionary for the specified section, then renames columns in \code{df} accordingly. If \code{keep_unmapped} is \code{FALSE}, only columns with a mapped ICASA code are retained in the output.

This is useful for standardizing column names in data extracted from template workbooks to the ICASA data model.

The function uses the \strong{dplyr} package for column renaming.
}
\examples{
library(dplyr)
df <- data.frame(LongName1 = 1:3, LongName2 = 4:6)
dict <- data.frame(
  Sheet = "SECTION",
  var_name = c("LongName1", "LongName2"),
  Code_Query = c("LN1", "LN2")
)
icasa_long_to_short(df, section = "SECTION", dict = dict)
# Returns a data frame with columns "LN1" and "LN2"

}
