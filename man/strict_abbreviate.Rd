% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/etl_utils.R
\name{strict_abbreviate}
\alias{strict_abbreviate}
\title{Strictly Abbreviate a String to a Minimum Length}
\usage{
strict_abbreviate(string, minlength = 2)
}
\arguments{
\item{string}{Character vector. The string(s) to abbreviate.}

\item{minlength}{Integer. The minimum (and maximum) length of the abbreviation. Default is 2.}
}
\value{
A character vector of abbreviated strings, each of length \code{minlength}.
}
\description{
Produces a strict abbreviation of a string, ensuring the result does not exceed the specified minimum length.
Automatically transliterates non-ASCII characters (e.g., Umlauts) to their ASCII equivalents if needed.
}
\details{
The function uses \code{abbreviate} with \code{strict = TRUE} to generate abbreviations. If a warning is triggered due to non-ASCII characters,
the input string is transliterated using \code{stringi::stri_trans_general(..., "Latin-ASCII")} before abbreviation.
If the resulting abbreviation exceeds \code{minlength}, it is truncated to exactly \code{minlength} characters.

This is useful for generating short, fixed-length codes or labels from longer strings, including those with accented or special characters.
}
\examples{
strict_abbreviate("Wheat", minlength = 3)
strict_abbreviate(c("Maize", "Rice"), minlength = 2)
strict_abbreviate("MÃ¼nchen", minlength = 2)

}
