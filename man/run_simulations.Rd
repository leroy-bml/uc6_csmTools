% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_simulations.R
\name{run_simulations}
\alias{run_simulations}
\title{Run DSSAT Simulations from a Dataset and Return Output}
\usage{
run_simulations(
  filex_path,
  treatments,
  framework = "dssat",
  dssat_dir = NULL,
  sim_dir = NULL,
  args = list()
)
}
\arguments{
\item{framework}{Character. Simulation framework to use (default: \code{"dssat"}).}

\item{dssat_dir}{Character or NULL. Path to the DSSAT installation directory. If NULL, uses environment variable or default.}

\item{sim_dir}{Character or NULL. Directory for simulation input/output files. If NULL, uses DSSAT directory or default.}

\item{args}{List. Additional simulation parameters (e.g., \code{TRTNO}, \code{RP}, \code{SQ}, \code{OP}, \code{CO}).}

\item{dataset}{A list containing DSSAT input tables, including at least \code{X} (management), \code{A} (observed summary), \code{T} (observed time series), \code{WTH} (weather), \code{SOL} (soil), and \code{CUL} (cultivar).}
}
\value{
A list containing:
\describe{
\item{\code{plant_growth}}{A data frame of simulated plant growth output.}
\item{\code{OBSERVED_Summary}}{Observed summary data (if provided).}
\item{\code{OBSERVED_TimeSeries}}{Observed time series data (if provided).}
}
}
\description{
Prepares input files, writes batch files, runs DSSAT simulations, and reads output for a given dataset.
}
\details{
The function sets up the DSSAT environment, writes all required input files to the appropriate directories, prepares a batch file, and runs DSSAT in batch mode. It then reads the main output file (\code{PlantGro.OUT}) and returns it along with observed data. The function handles both Windows and Unix systems and uses several helper functions for file I/O and simulation control.
}
\examples{
\dontrun{
result <- run_simulations(dataset)
head(result$plant_growth)
}

}
