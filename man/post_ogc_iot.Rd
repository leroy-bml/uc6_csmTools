% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_transform_iot.R
\name{post_ogc_iot}
\alias{post_ogc_iot}
\title{POST Data to an OGC SensorThings API Endpoint}
\usage{
post_ogc_iot(
  object = c("Things", "Sensors", "ObservedProperties", "Datastreams", "Observations"),
  body,
  url,
  token
)
}
\arguments{
\item{object}{Character. The type of resource to create. Must be one of \code{c("Things", "Sensors", "ObservedProperties", "Datastreams", "Observations")}.}

\item{body}{A list representing the JSON body to be sent in the request.}

\item{url}{Character. The base URL of the OGC SensorThings API endpoint (should end with a slash).}

\item{token}{Character. The Bearer token for authentication.}
}
\value{
The response object from the POST request (an \code{httr::response} object).
}
\description{
Sends a POST request to an OGC SensorThings API endpoint to create a new resource (e.g., Thing, Sensor, ObservedProperty, Datastream, or Observation).
}
\details{
This function converts the provided \code{body} to JSON and sends it as a POST request to the specified OGC SensorThings API endpoint, appending the resource type (\code{object}) to the base URL. The request includes the provided Bearer token for authentication.

The function uses the \strong{httr} package for HTTP requests and the \strong{jsonlite} package for JSON conversion.
}
\examples{
\dontrun{
post_ogc_iot(
  object = "Things",
  body = list(name = "MyThing", description = "A test thing"),
  url = "https://example.com/SensorThings/v1.0/",
  token = "your_access_token"
)
}

}
