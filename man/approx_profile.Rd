% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_soil_parameters.R
\name{approx_profile}
\alias{approx_profile}
\title{Interpolate Soil Profile Data to a given depth sequence}
\usage{
approx_profile(
  data,
  depth_seq = c(5, 10, 20, 30, 40, 50, 60, 70, 90, 110, 130, 150, 170, 190, 210),
  method = "linear"
)
}
\arguments{
\item{data}{A data frame containing soil profile data, with a depth column named \code{"SLB"} and subsequent columns for profile variables.}

\item{depth_seq}{Numeric vector. The standard depths (in cm) to which the profile should be interpolated. Default: typical DSSAT depths.}

\item{method}{Character. Interpolation method to use (passed to \code{approx}). Default is \code{"linear"}.}
}
\value{
A list with two elements:
\describe{
\item{\code{data}}{A data frame with interpolated profile data at standard depths.}
\item{\code{plot}}{A ggplot object showing the interpolation results for each variable.}
}
}
\description{
Interpolates numeric soil profile variables to a standard set of depths,
producing a harmonized profile and a diagnostic plot.
}
\details{
The function identifies the depth column (\code{SLB}), separates header, profile, and categorical columns, and interpolates numeric profile variables to the specified standard depths using linear interpolation (or another method supported by \code{approx}). It combines the interpolated and original data, duplicates header values for interpolated layers, and returns a harmonized data frame. A diagnostic plot is also produced, showing input and interpolated values for each variable.

The function uses the \strong{dplyr}, \strong{tidyr}, and \strong{ggplot2} packages for data manipulation and plotting.
}
\examples{
\dontrun{
result <- approx_profile(soil_data)
print(result$plot)
head(result$data)
}

}
