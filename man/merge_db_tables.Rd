% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_tbls.R
\name{merge_db_tables}
\alias{merge_db_tables}
\title{Merge Database Tables by Common Keys}
\usage{
merge_db_tables(
  db_tables,
  start_tables,
  type = c("referential", "loose"),
  drop_keys = FALSE,
  suffixes = c("-x", "-y"),
  exclude_cols = NULL
)
}
\arguments{
\item{db_tables}{A named list of data frames representing the entire database or a collection of potential parent tables.
These tables are the targets into which \code{start_tables} will be merged.}

\item{start_tables}{A named list of data frames or a single data frame. These are the tables that will be iteratively
merged into \code{db_tables}.}

\item{type}{Character. The type of merging relationship to use.
\code{"referential"} (default) ensures that child keys exist in the parent,
while \code{"loose"} performs a merge if there's any overlap in common key values.}

\item{drop_keys}{Logical. If \code{TRUE}, the common join key columns will be dropped from the merged table after merging (default: \code{FALSE}).}

\item{suffixes}{Character vector of length 2. Suffixes to append to duplicate column names that are not identical (default: \code{c(".x", ".y")}).}

\item{exclude_cols}{Optional character vector of column names to exclude from being considered or used as join keys.}
}
\value{
A list containing:
\itemize{
\item \code{results_df}: A named list of data frames, where each element corresponds to a table from \code{start_tables}
after it has been merged with relevant tables from \code{db_tables}.
\item \code{tables_merged}: A character vector listing the names of all tables from \code{db_tables} that were successfully
merged into any of the \code{start_tables}.
}
}
\description{
Merges a set of \code{start_tables} (e.g., child tables or tables to be integrated) into a largr collection of
\code{db_tables} (e.g., parent tables or the main database backbone) by their common columns.
The merging strategy (\code{type}) can be "referential" (based on foreign key integrity) or "loose" (based on common values).
It handles duplicate columns by fusing identical ones and flags inconsistencies.
}
\details{
The function operates as an iterative merging engine:
\itemize{
\item \strong{Initialization:} It prepares the \code{db_tables} and \code{start_tables} for merging, sorting table names for consistency
and pre-calculating primary keys.
\item \strong{Iterative Merging Loop:} For each table in \code{start_tables}, it enters a loop:
\itemize{
\item It identifies candidate tables from \code{db_tables} that have not yet been merged into the current \code{start_table}.
\item \strong{Key Identification:} Based on the \code{type} parameter:
\itemize{
\item If \code{type = "referential"}, it looks for primary keys in the candidate table that are also present
in the current \code{start_table} and verifies referential integrity (all child keys exist in parent).
\item If \code{type = "loose"}, it looks for any common columns where values overlap between the candidate table and \code{start_table}.
}
\item \strong{Exclusion:} Specified \code{exclude_cols} are removed from the potential join keys.
\item \strong{Merging:} If join keys are found, the candidate table is merged into the current \code{start_table} using \code{base::merge()}.
\item \strong{Duplicate Column Fusion:} After merging, \code{fuse_duplicate_columns()} is called to handle columns
with identical content but potentially different names (or suffixes from merging). This function also flags inconsistencies if columns with the same root name have different content.
\item \strong{Key Dropping:} If \code{drop_keys} is \code{TRUE}, the join key columns are removed from the merged table.
\item The loop continues for the current \code{start_table} until no more candidates can be merged into it.
}
}

This function relies on helper functions \code{get_pkeys()}, \code{check_ref_integrity()} (implicitly or explicitly depending on \code{type}), and \code{fuse_duplicate_columns()}.
}
