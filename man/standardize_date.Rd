% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/etl_utils.R
\name{standardize_date}
\alias{standardize_date}
\title{Standardize Date or Datetime Strings to a Desired Format}
\usage{
standardize_date(x, output_format = "\%Y-\%m-\%d")
}
\arguments{
\item{x}{A character vector of date or datetime strings to be standardized.}

\item{output_format}{Character. The desired output format for the dates. Defaults to \code{"\%Y-\%m-\%d"}. If set to \code{"Date"}, the function returns a Date object.}
}
\value{
A vector of the same length as \code{x}, with dates standardized to the specified format, or the original values if parsing fails.
}
\description{
Attempts to parse input values as dates or datetimes using a variety of common formats, and returns them in a standardized output format.
}
\details{
The function tries to parse each element of \code{x} using a set of common date and datetime formats, including ISO 8601, US, European, and compact forms. The first format that successfully parses any value is used for all elements. If \code{output_format} is \code{\"Date\"}, the result is returned as a Date object; otherwise, the result is formatted as a character vector using the specified format string.

If none of the formats match, the original input is returned unchanged.
}
\examples{
standardize_date(c("2023-01-01", "01/31/2023", "31/01/2023"))
standardize_date("2023-01-01T15:30:00", output_format = "\%d-\%m-\%Y")
standardize_date("02/15/2023", output_format = "Date")

}
