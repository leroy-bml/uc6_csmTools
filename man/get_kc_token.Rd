% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_transform_iot.R
\name{get_kc_token}
\alias{get_kc_token}
\title{Obtain an Access Token from a Keycloak Server Using Resource Owner Password Credentials}
\usage{
get_kc_token(url, client_id, client_secret, username, password)
}
\arguments{
\item{url}{Character. The token endpoint URL of the Keycloak server (typically ends with \code{/protocol/openid-connect/token}).}

\item{client_id}{Character. The client ID registered in Keycloak.}

\item{client_secret}{Character. The client secret associated with the client ID.}

\item{username}{Character. The username of the Keycloak user.}

\item{password}{Character. The password of the Keycloak user.}
}
\value{
A character string containing the access token, or \code{NULL} if the request fails or the token is not found.
}
\description{
Requests an OAuth2 access token from a Keycloak authentication server using the Resource Owner Password Credentials Grant (password grant).
}
\details{
This function sends a POST request to the Keycloak token endpoint with the provided credentials and client information, using the OAuth2 Resource Owner Password Credentials Grant. The function expects a successful response to contain an \code{access_token} field.

The function uses the \strong{httr} package for HTTP requests. The token is extracted from the response and returned as a character string.
}
\examples{
\dontrun{
token <- get_kc_token(
  url = "https://my-keycloak-server/auth/realms/myrealm/protocol/openid-connect/token",
  client_id = "myclient",
  client_secret = "mysecret",
  username = "myuser",
  password = "mypassword"
)
}

}
