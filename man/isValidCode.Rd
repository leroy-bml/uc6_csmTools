% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structure_metadata.R
\name{isValidCode}
\alias{isValidCode}
\title{Validate DSSAT Entity names by Type}
\usage{
isValidCode(
  x,
  item = c("experiment", "cultivar", "field", "soil", "weather_station"),
  framework = "dssat"
)
}
\arguments{
\item{x}{Character vector. The code(s) to validate.}

\item{item}{Character. The type of entity. One of \code{"experiment"}, \code{"cultivar"}, \code{"field"}, \code{"soil"}, or \code{"weather_station"}.}

\item{framework}{Character. The modeling framework (default: \code{"dssat"}). Currently only DSSAT is supported.}
}
\value{
Logical vector. \code{TRUE} if the code is valid for the specified type, \code{FALSE} otherwise.
}
\description{
Checks whether a code string is valid for a given DSSAT entity name (experiment, cultivar, field, soil, or weather station).
}
\details{
The function uses regular expressions to check if the input code(s) match the expected format for the specified entity type:
\itemize{
\item \code{experiment}: 4 uppercase letters followed by 4 digits (e.g., "EXPT2023")
\item \code{cultivar}: 2 uppercase letters followed by 4 digits (e.g., "CU1234")
\item \code{field}: 4 uppercase letters followed by 4 digits
\item \code{soil}: 4 uppercase letters and 6 digits, or 2 uppercase letters and 8 digits
\item \code{weather_station}: 4 uppercase letters
}
}
\examples{
isValidCode("EXPT2023", "experiment")        # TRUE
isValidCode("CU1234", "cultivar")            # TRUE
isValidCode("SOIL000001", "soil")            # TRUE
isValidCode("WXST", "weather_station")       # TRUE
isValidCode("BADCODE", "experiment")         # FALSE

}
