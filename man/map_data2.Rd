% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_data2.R
\name{map_data2}
\alias{map_data2}
\title{Map a Dataset from a Source Model to a Target Model}
\usage{
map_data2(dataset, input_model, output_model, header_type)
}
\arguments{
\item{dataset}{The input dataset to be transformed, structured as a named list of data frames.}

\item{input_model}{A character string identifying the source data model (e.g., \code{"bonares-lte_de"}).}

\item{output_model}{A character string identifying the target data model (e.g., \code{"icasa"}).}

\item{header_type}{A character string specifying the final header format (\code{"long"} or \code{"short"}).}
}
\value{
A named list of data frames, representing the dataset transformed into the \code{output_model} format.
}
\description{
A top-level wrapper function that configures and initiates a data mapping process. It selects the appropriate mapping rules and
data dictionaries based on the specified input and output models.
}
\details{
This function serves as the primary entry point for converting a dataset from one data model to another.
Its main responsibilities are:
\enumerate{
\item \strong{Configuration}: Based on the \code{output_model} (currently implemented for \code{"icasa"}), it fetches the required data
dictionary (e.g., via \code{fetch_icasa()}) and prepares a header lookup table.
\item \strong{Rule Selection}: It uses the \code{input_model} to select the correct YAML file (\code{.yaml}) containing the specific transformation rules.
\item \strong{Execution}: It passes the dataset and the prepared configuration to the \code{apply_mappings()} engine, which executes
the transformation.
}
}
